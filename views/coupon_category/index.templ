package coupon_category

import (
	"fmt"
	"strconv"
	"strings"

	"bajscheme/models"
	"bajscheme/views/layout"
)

templ CouponCategoryList(titlePage string,  coupon_categories []models.CouponCategory) {
	<div class="flex justify-between max-w-2xl mx-auto border-b border-b-slate-600 mb-8 pb-2">
		<h1 class="text-2xl font-bold text-center">
			{ strings.Trim(titlePage, "| ") }
		</h1>
		<a hx-swap="transition:true" class="btn btn-info p-4 hover:scale-[1.1]" href="/coupon_category/create">
			New
		</a>
	</div>
	<section class="overflow-auto max-w-2xl max-h-96 mx-auto bg-slate-600 rounded-lg shadow-xl">
		<table class="table table-zebra">
			<!-- head -->
			<thead class="bg-slate-700">
				<tr>
					<th></th>
					<th class="text-center">Coupon Id</th>
<th class="text-center">Taxonomy Id</th>

					<th class="text-center">Options</th>
				</tr>
			</thead>
			if len(coupon_categories) != 0 {
				<tbody>
					for _, coupon_category := range coupon_categories {
						<tr>
							<th>{ strconv.Itoa(int(coupon_category.ID)) }</th>
                            coupon_category
							<td class="flex justify-center gap-2">
								<a
 									hx-swap="transition:true"
 									href={ templ.URL(fmt.Sprintf("/coupon_category/edit/%d", coupon_category.ID)) }
 									class="btn btn-primary p-3 hover:scale-[1.1]"
								>
									Edit
								</a>
								<button
 									hx-swap="transition:true"
 									hx-delete={ fmt.Sprintf("/coupon_category/delete/%d", coupon_category.ID) }
 									hx-confirm={ fmt.Sprintf("Are you sure you want to delete the coupon_category with ID #%d?", coupon_category.ID) }
 									hx-target="body"
 									class="btn btn-error p-3 hover:scale-[1.1]"
								>
									Delete
								</button>
							</td>
						</tr>
					}
				</tbody>
			} else {
				<tbody>
					<tr>
						<td colspan="4" align="center">
							coupon_category is empty
						</td>
					</tr>
				</tbody>
			}
		</table>
	</section>
}

templ CouponCategoryIndex(
    title,
    username string,
    fromProtected bool,
    isError bool,
	errMsgs, sucMsgs []string,
    cmp templ.Component,
    ) {
	@layout.Base(title, username, fromProtected, isError, errMsgs, sucMsgs) {
		@cmp
	}
}
